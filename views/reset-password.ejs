<!DOCTYPE html>
<html lang="zh-CN">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>重置密码</title>
  <link rel="stylesheet" href="/css/base.css">
  <link rel="stylesheet" href="/css/pages/login-page.css">
  <link rel="stylesheet" href="/css/components/form.css">
</head>
<body class="login-bg">
  <!-- 背景装饰 -->
  <div class="login-bg-decor">
    <div class="decor decor1"></div>
    <div class="decor decor2"></div>
    <div class="decor decor3"></div>
  </div>

  <div class="glass-card login-container">
    <h1 class="reset-title">
      <i class="fa fa-key"></i>
      重置密码
    </h1>
    <p class="login-subtitle">
      请输入您的新密码，密码长度至少6位，建议包含字母、数字和特殊字符
    </p>
    
    <form id="resetPasswordForm" class="login-form">
      <input type="hidden" id="reset-token">
      
      <div class="form-group">
        <label for="reset-new-password">
          <i class="fa fa-lock"></i>
        </label>
        <input type="password" id="reset-new-password" required class="login-input" 
               placeholder="请输入新密码" minlength="8">
        <span class="toggle-password">
          <i class="fa fa-eye"></i>
        </span>
      </div>
      
      <div class="password-strength" id="password-strength"></div>
      
      <div class="form-group">
        <label for="reset-confirm-password">
          <i class="fa fa-lock"></i>
        </label>
        <input type="password" id="reset-confirm-password" required class="login-input" 
               placeholder="请再次输入新密码" minlength="8">
        <span class="toggle-password">
          <i class="fa fa-eye"></i>
        </span>
      </div>
      
      <div id="resetPasswordTip" class="form-error" style="display:none;"></div>
      
      <button type="submit" class="login-btn" id="reset-btn">
        <i class="fa fa-check"></i>
        重置密码
      </button>
    </form>
    
    <div class="register-link">
      <a href="/login">
        <i class="fa fa-arrow-left"></i>
        返回登录
      </a>
    </div>
  </div>

  <script>
    // 访问限制：检查token参数
    function getQueryParam(name) {
      const url = new URL(window.location.href);
      return url.searchParams.get(name);
    }
    
    const token = getQueryParam('token');
    if (!token) {
      // 没有token参数，重定向到登录页
      window.location.href = '/login';
    }
    
    document.getElementById('reset-token').value = token;
    
    // 密码强度检测
    function checkPasswordStrength(password) {
      let strength = 0;
      let feedback = [];
      
      if (password.length >= 6) strength += 1;
      else feedback.push('密码长度至少6位');
      
      if (/[a-z]/.test(password)) strength += 1;
      if (/[A-Z]/.test(password)) strength += 1;
      if (/[0-9]/.test(password)) strength += 1;
      if (/[^A-Za-z0-9]/.test(password)) strength += 1;
      
      if (password.length >= 8) strength += 1;
      if (password.length >= 12) strength += 1;
      
      const strengthElement = document.getElementById('password-strength');
      
      if (strength <= 2) {
        strengthElement.className = 'password-strength weak';
        strengthElement.innerHTML = '<i class="fa fa-exclamation-triangle"></i> 密码强度：弱 - ' + feedback.join('，');
      } else if (strength <= 4) {
        strengthElement.className = 'password-strength medium';
        strengthElement.innerHTML = '<i class="fa fa-info-circle"></i> 密码强度：中等';
      } else {
        strengthElement.className = 'password-strength strong';
        strengthElement.innerHTML = '<i class="fa fa-check-circle"></i> 密码强度：强';
      }
    }
    
    // 切换密码显示/隐藏
    function togglePassword(inputId) {
      const input = document.getElementById(inputId);
      const button = input.nextElementSibling;
      const icon = button.querySelector('i');
      
      if (input.type === 'password') {
        input.type = 'text';
        icon.className = 'fa fa-eye-slash';
      } else {
        input.type = 'password';
        icon.className = 'fa fa-eye';
      }
    }
    
    // 表单验证
    function validateForm() {
      const newPassword = document.getElementById('reset-new-password').value;
      const confirmPassword = document.getElementById('reset-confirm-password').value;
      
      if (newPassword.length < 6) {
        showTip('密码长度至少6位', 'error');
        return false;
      }
      
      if (newPassword !== confirmPassword) {
        showTip('两次输入的密码不一致', 'error');
        return false;
      }
      
      return true;
    }
    
    // 显示提示信息
    function showTip(message, type = 'success') {
      const tip = document.getElementById('resetPasswordTip');
      tip.textContent = message;
      tip.className = type === 'success' ? 'form-success' : 'form-error';
      tip.style.display = 'block';
    }
    
    // 隐藏提示信息
    function hideTip() {
      const tip = document.getElementById('resetPasswordTip');
      tip.style.display = 'none';
    }
    
    // 设置按钮加载状态
    function setButtonLoading(loading) {
      const btn = document.getElementById('reset-btn');
      const icon = btn.querySelector('i');
      
      if (loading) {
        btn.disabled = true;
        icon.className = 'loading';
        btn.innerHTML = '<div class="loading"></div> 处理中...';
      } else {
        btn.disabled = false;
        icon.className = 'fa fa-check';
        btn.innerHTML = '<i class="fa fa-check"></i> 重置密码';
      }
    }
    
    // 监听密码输入
    document.getElementById('reset-new-password').addEventListener('input', function() {
      checkPasswordStrength(this.value);
      hideTip();
    });
    
    document.getElementById('reset-confirm-password').addEventListener('input', function() {
      hideTip();
    });
    
    // 表单提交
    const resetPasswordForm = document.getElementById('resetPasswordForm');
    resetPasswordForm.onsubmit = async function(e) {
      e.preventDefault();
      
      if (!validateForm()) {
        return;
      }
      
      const token = document.getElementById('reset-token').value;
      const newPassword = document.getElementById('reset-new-password').value;
      
      setButtonLoading(true);
      
      try {
        const res = await fetch('/api/auth/reset-password', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ token, newPassword })
        });
        
        const data = await res.json();
        
        if (data.success) {
          showTip(data.message || '密码重置成功！即将跳转到登录页面...', 'success');
          setTimeout(() => { 
            window.location.href = '/login'; 
          }, 2000);
        } else {
          showTip(data.message || '重置失败，请检查链接是否有效', 'error');
        }
      } catch (err) {
        showTip('网络错误，请稍后重试', 'error');
      } finally {
        setButtonLoading(false);
      }
    };
    
    // 页面加载时检查token有效性
    window.addEventListener('load', async function() {
      const token = document.getElementById('reset-token').value;
      if (!token) return;
      
      try {
        const res = await fetch('/api/auth/verify-reset-token', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ token })
        });
        
        const data = await res.json();
        
        if (!res.ok) {
          showTip(data.message || '重置链接无效，请重新申请', 'error');
          document.getElementById('reset-btn').disabled = true;
        } else {
          console.log('Token验证成功');
        }
      } catch (err) {
        console.log('Token验证失败:', err);
        showTip('网络错误，请稍后重试', 'error');
      }
    });
  </script>
</body>
</html>
